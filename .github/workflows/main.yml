name: Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

defaults:
  run:
    working-directory: python

jobs:
  python-lint:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.12"
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Code Lint
        run: uv run ruff check
  python-format:
    name: Python Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.12"
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Code Format
        run: uv run ruff format --check
  python-unit:
    timeout-minutes: 1
    name: Python Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.12"
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Run E2E Tests
        run: uv run pytest tests/unit
  python-e2e:
    timeout-minutes: 5
    name: Python E2E Tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.12"
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Run E2E Tests
        run: uv run pytest tests/e2e
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_PASSWORD: postgres

  typescript-unit:
    timeout-minutes: 1
    name: Typescript Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: typescript
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "pnpm"

      - name: Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile

      - name: Run Tests
        shell: bash
        run: pnpm run test:unit

  typescript-e2e:
    timeout-minutes: 1
    name: Typescript E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.12"
      - name: Install uv dependencies
        run: uv sync --all-extras

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "pnpm"

      - name: Install pnpm dependencies
        shell: bash
        run: pnpm install --frozen-lockfile

      - name: Run Tests
        shell: bash
        working-directory: typescript
        run: pnpm run test:e2e
  validate-schema:
    name: OpenAPI Schema
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Validate OpenAPI schema files
        run: npm run schema:validate

  contrib-readme-job:
    runs-on: ubuntu-latest
    name: A job to automate contrib in readme
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3

      - name: Update contributors in README.md
        uses: akhilmhdh/contributors-readme-action@v2.3.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          readme_path: "README.md"

      - name: Update contributors in mission-and-team.mdx
        uses: akhilmhdh/contributors-readme-action@v2.3.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          readme_path: "docs/about/mission-and-team.mdx"
